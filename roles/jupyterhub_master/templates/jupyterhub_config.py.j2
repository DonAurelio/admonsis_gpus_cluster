# Configuration file for JupyterHub
c = get_config()

# ----------------------------------------------------------------------------
# Authenticator
# ----------------------------------------------------------------------------
# LocalAuthenticator lets JupyterHub authenticate system users.
# If set to True, JupyterHub will create missing users on the system.
c.LocalAuthenticator.create_system_users = True

# PAMAuthenticator can mark some users as admins if they belong to a group.
# Example: any user in the "wheel" group is admin.
# Replace {{ jupyterhub_admin_groups }} with the actual group name from Ansible vars.
c.PAMAuthenticator.admin_groups = { {{ jupyterhub_admin_groups }} }

# ----------------------------------------------------------------------------
# Spawner: using SlurmSpawner to launch jobs on worker nodes via SLURM
# ----------------------------------------------------------------------------
# SlurmSpawner submits single-user notebook servers as SLURM jobs.
c.JupyterHub.spawner_class = 'batchspawner.SlurmSpawner'

# Path to the single-user server binary
c.Spawner.cmd = ['/usr/local/bin/jupyterhub-singleuser']

# Optional: specify the SLURM partition to run jobs
# You can also set this via environment variable (see below).
# Example: c.SlurmSpawner.partition = 'compute'

# ----------------------------------------------------------------------------
# SLURM Job Template (minimal)
# ----------------------------------------------------------------------------
# By default, SlurmSpawner builds a job script for srun/sbatch.
# You can customize resources here.
c.SlurmSpawner.batch_script = '''#!/bin/bash
#SBATCH --job-name=jupyterhub-singleuser
#SBATCH --output=/home/%u/jupyterhub-%j.out
#SBATCH --error=/home/%u/jupyterhub-%j.err
#SBATCH --partition=local
#SBATCH --time=01:00:00
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1

# Load required modules (optional, if using module system)
# module load python/3.10

exec {cmd}
'''

# ----------------------------------------------------------------------------
# Hub Network
# ----------------------------------------------------------------------------
# Bind JupyterHub on all interfaces, port 8000
c.JupyterHub.bind_url = 'http://0.0.0.0:8000'